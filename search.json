[{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_shark_data.html","id":"installation","dir":"Articles","previous_headings":"Getting Started","what":"Installation","title":"Retrieve Data From SHARK","text":"can install package GitHub using devtools package: Load SHARK4R library:","code":"# install.packages(\"devtools\") devtools::install_github(\"sharksmhi/SHARK4R\",                          dependencies = TRUE) library(SHARK4R)"},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_shark_data.html","id":"retrieve-data-table","dir":"Articles","previous_headings":"Retrieve Data Using SHARK4R","what":"Retrieve Data Table","title":"Retrieve Data From SHARK","text":"Data can retrieved filtering options available SHARK. see available filtering options, please refer get_shark_options information .","code":"# Retrieve chlorophyll data for April to June from 2019 to 2020 shark_data <- get_shark_table(fromYear = 2019,                                toYear = 2020,                               months = c(4, 5, 6),                                dataTypes = c(\"Chlorophyll\"),                               limit = 200)  # Print data print(shark_data) ## # A tibble: 200 × 72 ##    delivery_datatype check_status_sv data_checked_by_sv visit_year visit_month ##    <chr>             <chr>           <chr>                   <int>       <int> ##  1 Chlorophyll       Klar            Leverantör               2020           6 ##  2 Chlorophyll       Klar            Leverantör               2020           6 ##  3 Chlorophyll       Klar            Leverantör               2020           6 ##  4 Chlorophyll       Klar            Leverantör               2020           6 ##  5 Chlorophyll       Klar            Leverantör               2020           6 ##  6 Chlorophyll       Klar            Leverantör               2020           6 ##  7 Chlorophyll       Klar            Leverantör               2020           6 ##  8 Chlorophyll       Klar            Leverantör               2020           6 ##  9 Chlorophyll       Klar            Leverantör               2020           6 ## 10 Chlorophyll       Klar            Leverantör               2020           6 ## # ℹ 190 more rows ## # ℹ 67 more variables: station_name <chr>, reported_station_name <chr>, ## #   sample_location_id <chr>, station_id <chr>, sample_project_name_sv <chr>, ## #   sample_orderer_name_sv <chr>, visit_id <chr>, visit_date <chr>, ## #   shark_sample_id_md5 <chr>, sample_date <chr>, sample_time <chr>, ## #   sample_enddate <chr>, sample_endtime <chr>, sample_latitude_dm <chr>, ## #   sample_longitude_dm <chr>, sample_latitude_dd <chr>, …"},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_shark_data.html","id":"get-shark-api-options","dir":"Articles","previous_headings":"Retrieve Data Using SHARK4R","what":"Get SHARK API Options","title":"Retrieve Data From SHARK","text":"Filtering options, including data types, dataset names, stations, taxa, , can retrieved using get_shark_options function.","code":"# Retrieve available search options shark_options <- get_shark_options()  # List the names of the available options names(shark_options) ##  [1] \"datasets\"              \"dataTypes\"             \"parameters\"            ##  [4] \"minYear\"               \"maxYear\"               \"months\"                ##  [7] \"checkStatuses\"         \"qualityFlags\"          \"deliverers\"            ## [10] \"orderers\"              \"projects\"              \"redListedCategories\"   ## [13] \"taxa\"                  \"stations\"              \"seaAreas\"              ## [16] \"vattenDistrikt\"        \"typOmraden\"            \"seaBasins\"             ## [19] \"counties\"              \"municipalities\"        \"waterCategories\"       ## [22] \"helcomOspar\"           \"parametersForDatatype\" \"headerlangers\"         ## [25] \"minYearPerDatatype\" # View available datatypes dataTypes <- unlist(shark_options$dataTypes) print(dataTypes) ##  [1] \"Bacterioplankton\"      \"Chlorophyll\"           \"Epibenthos\"            ##  [4] \"Grey seal\"             \"Harbour Porpoise\"      \"Harbour seal\"          ##  [7] \"Jellyfish\"             \"Physical and Chemical\" \"Phytoplankton\"         ## [10] \"Picoplankton\"          \"PlanktonBarcoding\"     \"Primary production\"    ## [13] \"Profile\"               \"Ringed seal\"           \"Sedimentation\"         ## [16] \"Zoobenthos\"            \"Zooplankton\""},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_shark_data.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Retrieve Data From SHARK","text":"","code":"## To cite package 'SHARK4R' in publications use: ##  ##   Markus Lindh, Anders Torstensson, SHARK (2024). SHARK4R. R package ##   version 0.1.0. https://sharksmhi.github.io/SHARK4R/ ##  ## A BibTeX entry for LaTeX users is ##  ##   @Manual{, ##     title = {SHARK4R}, ##     author = {Markus Lindh and Anders Torstensson and {SHARK}}, ##     year = {2024}, ##     note = {R package version 0.1.0}, ##     url = {https://sharksmhi.github.io/SHARK4R/}, ##   }"},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"installation","dir":"Articles","previous_headings":"Getting Started","what":"Installation","title":"Retrieve Taxonomic Data From Dyntaxa","text":"can install package GitHub using devtools package: Load SHARK4R library:","code":"# install.packages(\"devtools\") devtools::install_github(\"sharksmhi/SHARK4R\",                          dependencies = TRUE) library(SHARK4R) library(tibble)"},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"retrieve-taxonony-table","dir":"Articles","previous_headings":"Retrieve Taxonomic Data From SHARK","what":"Retrieve Taxonony Table","title":"Retrieve Taxonomic Data From Dyntaxa","text":"Taxon tables can retrieved filtering options available SHARK. see available filtering options, please refer get_shark_options information .","code":"# Retrieve chlorophyll data for April to June from 2019 to 2020 shark_taxon <- get_shark_table(tableView = \"report_taxon\",                                limit = 200,                                fromYear = 2019,                                toYear = 2020,                                months = c(),                                dataTypes = \"Phytoplankton\")  # Print data print(shark_taxon) ## # A tibble: 200 × 6 ##    reported_scientific_name  scientific_name dyntaxa_id aphia_id taxon_hierarchy ##    <chr>                     <chr>           <chr>      <chr>    <chr>           ##  1 Acanthoceras zachariasii  Acanthoceras z… 264148     178990   Chromista - Sa… ##  2 Acanthoica quattrospina   Acanthoica qua… 236952     235802   Chromista - Ha… ##  3 Acanthostomella           Acanthostomella 1010638    NA       Chromista - Sa… ##  4 Acanthostomella norvegica Acanthostomell… 238502     183556   Chromista - Sa… ##  5 Achnanthes                Achnanthes      1010466    149191   Chromista - Sa… ##  6 Actinastrum hantzschii    Actinastrum ha… 238839     160543   Plantae - Viri… ##  7 Actinocyclus              Actinocyclus    1010407    148944   Chromista - Sa… ##  8 Actinocyclus normanii     Actinocyclus n… 237433     148945   Chromista - Sa… ##  9 Actinocyclus octonarius   Actinocyclus o… 237434     149164   Chromista - Sa… ## 10 Actinocyclus octonarius … Actinocyclus o… 248668     162770   Chromista - Sa… ## # ℹ 190 more rows ## # ℹ 1 more variable: counted_rows <int>"},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"dyntaxa-api-key","dir":"Articles","previous_headings":"Retrieve Dyntaxa Data","what":"Dyntaxa API Key","title":"Retrieve Taxonomic Data From Dyntaxa","text":"Dyntaxa requires subscription key access API. obtain key, sign taxonomy product SLU Swedish Species Information Centre´s Developer Portal get key. example , key retrieved environment variable.","code":"# Retrieve the API key dyntaxa_key <- Sys.getenv(\"DYNTAXA_KEY\")"},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"match-taxon-names","dir":"Articles","previous_headings":"Retrieve Dyntaxa Data","what":"Match taxon names","title":"Retrieve Taxonomic Data From Dyntaxa","text":"","code":"# Randomly select 10 taxa from shark_taxon$scientific_name taxon_names <- sample(shark_taxon$scientific_name, size = 10)  # Match taxon_names with Dyntaxa API matches <- match_taxon_name(taxon_names,                              dyntaxa_key,                              multiple_options = FALSE,                             verbose = FALSE)  # List the names of the available options tibble(matches) ## # A tibble: 10 × 5 ##    search_pattern                         taxon_id best_match  author valid_name ##    <chr>                                     <int> <chr>       <chr>  <chr>      ##  1 Cosmarium                               1010708 Cosmarium   Corda… Cosmarium  ##  2 Closterium                              1010716 Closterium  Nitzs… Closterium ##  3 Aulacoseira islandica subsp. helvetica   248665 Aulacoseir… (O.F.… Aulacosei… ##  4 Chaetoceros constrictus                  237311 Chaetocero… Gran,… Chaetocer… ##  5 Chaetoceros diadema                      237322 Chaetocero… (Ehre… Chaetocer… ##  6 Aphanocapsa elachista                   6331062 Aphanocaps… West … Aphanocap… ##  7 Cochlodinium helicoides                  238402 Cochlodini… M.Leb… Cochlodin… ##  8 Achnanthes                              1010466 Achnanthes  Bory   Achnanthes ##  9 Amphidinium crassum                      238366 Amphidiniu… Lohma… Amphidini… ## 10 Coscinodiscophyceae                     4000164 Coscinodis… Round… Coscinodi…"},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"retrieve-taxonomic-information","dir":"Articles","previous_headings":"Retrieve Dyntaxa Data","what":"Retrieve Taxonomic information","title":"Retrieve Taxonomic Data From Dyntaxa","text":"Taxonomic records can retrieved indivudual taxa using get_dyntaxa_records function.","code":"# Get all Dyntaxa IDs dyntaxa_id <- unique(matches$taxon_id)  # Remove potential NAs dyntaxa_id <- dyntaxa_id[!is.na(dyntaxa_id)]  # Get Dyntaxa records dyntaxa_records <- get_dyntaxa_records(dyntaxa_id,                                        dyntaxa_key)  # Print records tibble(dyntaxa_records) ## # A tibble: 10 × 22 ##    taxonId parentId secondaryParents sortOrder statusReason isMicrospecies ##      <int>    <int> <list>               <int> <lgl>        <lgl>          ##  1  237311  1010380 <int [0]>            73074 NA           FALSE          ##  2  237322  1010380 <int [0]>            73085 NA           FALSE          ##  3  238366  1010608 <int [0]>            68990 NA           FALSE          ##  4  238402  1010610 <int [0]>            69011 NA           FALSE          ##  5  248665   237397 <int [0]>            72810 NA           FALSE          ##  6 1010466  2003197 <int [0]>            70625 NA           FALSE          ##  7 1010708  2003281 <int [0]>            95636 NA           FALSE          ##  8 1010716  2003282 <int [0]>            95429 NA           FALSE          ##  9 4000164  6323136 <int [1]>            72791 NA           FALSE          ## 10 6331062  1010255 <int [0]>            67792 NA           FALSE          ## # ℹ 16 more variables: externalComment <chr>, redlistCategory <lgl>, ## #   excludeFromReportingSystem <lgl>, nrOfChilds <int>, names <list>, ## #   typedRelations.parentRelations <list>, ## #   typedRelations.childRelations <list>, status.id <int>, status.value <chr>, ## #   status.name <chr>, category.id <int>, category.value <chr>, ## #   category.name <chr>, type.id <int>, type.value <chr>, type.name <chr>"},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"retrieve-parent-ids","dir":"Articles","previous_headings":"Retrieve Dyntaxa Data","what":"Retrieve Parent IDs","title":"Retrieve Taxonomic Data From Dyntaxa","text":"parent taxa Dyntaxa ID can retrieved using get_dyntaxa_parent_ids function.","code":"# Get all parents parents_id <- get_dyntaxa_parent_ids(dyntaxa_id,                                       dyntaxa_key,                                      verbose = FALSE)  # List the names of the available options print(parents_id) ## [[1]] ## [1] 5000045 6000581 6000543 6000542 4000126 6008733 2003281 1010708 ##  ## [[2]] ## [1] 5000045 6000581 6000543 6000542 4000126 6008733 2003282 1010716 ##  ## [[3]] ##  [1] 5000055 6011755 6011756 6011758 6322929 5000104 6323134 6323136 4000164 ## [10] 3000587 2003165 1010397  237397  248665 ##  ## [[4]] ##  [1] 5000055 6011755 6011756 6011758 6322929 5000104 6323134 6323136 4000227 ## [10] 3000581 2003157 1010380  237311 ##  ## [[5]] ##  [1] 5000055 6011755 6011756 6011758 6322929 5000104 6323134 6323136 4000227 ## [10] 3000581 2003157 1010380  237322 ##  ## [[6]] ## [1] 5000052 5000053 4000147 6020339 3000552 2003110 1010255 6331062 ##  ## [[7]] ##  [1] 5000055 6011755 6011756 6011759 6011678 5000062 6011725 6011726 4000169 ## [10] 3000619 2003241 1010610  238402 ##  ## [[8]] ##  [1] 5000055 6011755 6011756 6011758 6322929 5000104 6323134 6323136 4000165 ## [10] 3000830 3000600 2003197 1010466 ##  ## [[9]] ##  [1] 5000055 6011755 6011756 6011759 6011678 5000062 6011725 6011726 4000169 ## [10] 3000619 2003241 1010608  238366 ##  ## [[10]] ## [1] 5000055 6011755 6011756 6011758 6322929 5000104 6323134 6323136 4000164"},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"construct-complete-taxonomic-table","dir":"Articles","previous_headings":"Retrieve Dyntaxa Data","what":"Construct Complete Taxonomic Table","title":"Retrieve Taxonomic Data From Dyntaxa","text":"complete taxonomic table, including related taxa, can constructed using construct_dyntaxa_table function. Synonms can included using recommended_only parameter.","code":"# Retrieve complete taxonomic table (including parents and all descendants below genus level) taxonomy_table <- construct_dyntaxa_table(parents_id,                                            dyntaxa_key,                                            shark_output = TRUE,                                            recommended_only = FALSE,                                            add_genus_children = TRUE,                                           verbose = FALSE)  # Print the taxonomy table as a tibble tibble(taxonomy_table) ## # A tibble: 391 × 12 ##    taxon_id name    rank  author Kingdom Phylum Class Order Family Genus Species ##       <int> <chr>   <chr> <chr>  <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   ##  1  5000045 Plantae King… Haeck… Plantae NA     NA    NA    NA     NA    NA      ##  2  4000126 Conjug… Class Engler Plantae NA     Conj… NA    NA     NA    NA      ##  3  6008733 Desmid… Order Bessey Plantae NA     Conj… Desm… NA     NA    NA      ##  4  2003281 Desmid… Fami… Ralfs  Plantae NA     Conj… Desm… Desmi… NA    NA      ##  5  1010708 Cosmar… Genus Corda… Plantae NA     Conj… Desm… Desmi… Cosm… NA      ##  6    38895 Cosmar… Spec… Bréb.… Plantae NA     Conj… Desm… Desmi… Cosm… Cosmar… ##  7    38896 Cosmar… Spec… Meneg… Plantae NA     Conj… Desm… Desmi… Cosm… Cosmar… ##  8    38897 Cosmar… Spec… Corda… Plantae NA     Conj… Desm… Desmi… Cosm… Cosmar… ##  9    38898 Cosmar… Spec… Bréb.… Plantae NA     Conj… Desm… Desmi… Cosm… Cosmar… ## 10    38899 Cosmar… Spec… Elfvi… Plantae NA     Conj… Desm… Desmi… Cosm… Cosmar… ## # ℹ 381 more rows ## # ℹ 1 more variable: hierarchy <chr>"},{"path":"https://sharksmhi.github.io/SHARK4R/articles/retrieve_taxonomic_data.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Retrieve Taxonomic Data From Dyntaxa","text":"","code":"## To cite package 'SHARK4R' in publications use: ##  ##   Markus Lindh, Anders Torstensson, SHARK (2024). SHARK4R. R package ##   version 0.1.0. https://sharksmhi.github.io/SHARK4R/ ##  ## A BibTeX entry for LaTeX users is ##  ##   @Manual{, ##     title = {SHARK4R}, ##     author = {Markus Lindh and Anders Torstensson and {SHARK}}, ##     year = {2024}, ##     note = {R package version 0.1.0}, ##     url = {https://sharksmhi.github.io/SHARK4R/}, ##   }"},{"path":"https://sharksmhi.github.io/SHARK4R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Lindh. Author, maintainer. Anders Torstensson. Author.            Swedish Meteorological Hydrological Institute SHARK. Copyright holder.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Markus Lindh, Anders Torstensson, SHARK (2024). SHARK4R. R package version 0.1.0. https://sharksmhi.github.io/SHARK4R/","code":"@Manual{,   title = {SHARK4R},   author = {Markus Lindh and Anders Torstensson and {SHARK}},   year = {2024},   note = {R package version 0.1.0},   url = {https://sharksmhi.github.io/SHARK4R/}, }"},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"shark4r-","dir":"","previous_headings":"","what":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"R package equipped client application designed integration API functions. facilitates access various databases, including SHARK, SLU Artdatabanken (Dyntaxa), WoRMS. package serves dual purpose, supporting data analysis automatic quality control physical, chemical, marine biological data. Developed Sh SMHI, modified https://iobis.github.io/obistools Provoost P Bosch S (2018). “obistools: Tools data enhancement quality control.” Ocean Biogeographic Information System. Intergovernmental Oceanographic Commission UNESCO. https://cran.r-project.org/package=obistools.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"installing-shark4r-requires-the-devtools-package","dir":"","previous_headings":"","what":"Installing SHARK4R requires the `devtools`` package:","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"sharksmhi/SHARK4R\", dependencies = TRUE)"},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"download-data-from-shark","dir":"","previous_headings":"","what":"Download data from SHARK","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"get_shark_table() can used call SHARK API retrieve data specified arguments. Available filtration options can listed get_shark_options() function. higher taxonomy biological data loaded database, can updated World Register Marine Species (WoRMS) SLU Artdatabanken APIs, using functions update_worms_taxonomy() update_dyntaxa_taxonomy().","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"check-required-fields","dir":"","previous_headings":"","what":"Check required fields","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"check_datatype() check global SHARK required fields present occurrence table values missing. functions returns dataframe errors ().","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"plot-points-on-a-map","dir":"","previous_headings":"","what":"Plot points on a map","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"plot_map() generate ggplot2 map occurrence records, plot_map_leaflet() creates zoomable interactive Leaflet map.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"check-points-on-land","dir":"","previous_headings":"","what":"Check points on land","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"check_onland() uses xylookup web service internally uses land polygons OpenStreetMap check points located land. shapefiles can used well.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"check-depth","dir":"","previous_headings":"","what":"Check depth","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"check_depth() uses xylookup web service identify records potentially invalid depths. Multiple checks performed function: missing depth column (warning) empty depth column (warning) depth values can’t converted numbers (error) values larger depth value bathymetry layer, applying provided depthmargin (error) depth values negative shore points, applying provided shoremargin (error) minimum depth greater maximum depth (error)","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"check-outliers","dir":"","previous_headings":"","what":"Check outliers","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"check_outliers_dataset() use qc-service web service identify records statistical outliers. species outlier checks performed environmental data (bathymetry, sea surface salinity sea surface temperature) well spatially. Outliers identified points deviate six times median absolute deviation (MAD) three times interquartile range (IQR) median. list extra field debug level output report provides relevant statistics outlier analysis based. report also gives overview outliers. Outliers can plotted plot_outliers(report)","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/index.html","id":"taxon-matching","dir":"","previous_headings":"","what":"Taxon matching","title":"Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system","text":"match_taxa() performs interactive taxon matching World Register Marine Species (WoRMS; http://www.marinespecies.org/index.php). match_taxon_name() matches taxa names SLU Artdatabanken API (Dyntaxa) provides taxon_ids.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/SHARK4R-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SHARK4R: Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system — SHARK4R-package","title":"SHARK4R: Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system — SHARK4R-package","text":"R package data analysis automatic quality control physical, chemical marine biological data generated SHARK Planktontoolbox system developed Sh SMHI. Modified https://iobis.github.io/obistools. Provoost P Bosch S (2018). \"obistools: Tools data enhancement quality control.\" Ocean Biogeographic Information System. Intergovernmental Oceanographic Commission UNESCO. https://cran.r-project.org/package=obistools.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/SHARK4R-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SHARK4R: Data analysis and automatic quality control of physical, chemical and marine biological data generated by the SHARK or Planktontoolbox system — SHARK4R-package","text":"Maintainer: Markus Lindh first.last@example.com (ORCID) Authors: Anders Torstensson first.last@example.com (ORCID) (Swedish Meteorological Hydrological Institute) contributors: SHARK shark@smhi.se [copyright holder]","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_species_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to add species information to species list — add_species_info","title":"Helper function to add species information to species list — add_species_info","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function adds species information shark species list.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_species_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to add species information to species list — add_species_info","text":"","code":"add_species_info(shark_species_list, species)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_species_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to add species information to species list — add_species_info","text":"shark_species_list data frame containing shark species information. species data frame containing gathered species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_species_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to add species information to species list — add_species_info","text":"data frame containing shark species list added species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_worms_species_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to add WoRMS species information to taxa list — add_worms_species_info","title":"Function to add WoRMS species information to taxa list — add_worms_species_info","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function adds WoRMS species information taxa_worms data frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_worms_species_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to add WoRMS species information to taxa list — add_worms_species_info","text":"","code":"add_worms_species_info(taxa_worms, species)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_worms_species_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to add WoRMS species information to taxa list — add_worms_species_info","text":"taxa_worms data frame containing WoRMS taxonomy information. species data frame containing gathered WoRMS species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/add_worms_species_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to add WoRMS species information to taxa list — add_worms_species_info","text":"data frame containing taxa_worms added WoRMS species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Bacterioplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Bacterioplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Bacterioplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Bacterioplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Bacterioplankton","text":"","code":"check_Bacterioplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Bacterioplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Bacterioplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Bacterioplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Bacterioplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Chlorophyll.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Chlorophyll","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Chlorophyll","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Chlorophyll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Chlorophyll","text":"","code":"check_Chlorophyll(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Chlorophyll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Chlorophyll","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Chlorophyll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Chlorophyll","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Epibenthos.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Epibenthos","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Epibenthos","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Epibenthos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Epibenthos","text":"","code":"check_Epibenthos(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Epibenthos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Epibenthos","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Epibenthos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Epibenthos","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_EpibenthosDropvideo.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_EpibenthosDropvideo","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_EpibenthosDropvideo","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_EpibenthosDropvideo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_EpibenthosDropvideo","text":"","code":"check_EpibenthosDropvideo(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_EpibenthosDropvideo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_EpibenthosDropvideo","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_EpibenthosDropvideo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_EpibenthosDropvideo","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_GreySeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_GreySeal","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_GreySeal","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_GreySeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_GreySeal","text":"","code":"check_GreySeal(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_GreySeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_GreySeal","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_GreySeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_GreySeal","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourPorpoise.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourPorpoise","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourPorpoise","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourPorpoise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourPorpoise","text":"","code":"check_HarbourPorpoise(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourPorpoise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourPorpoise","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourPorpoise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourPorpoise","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourSeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourSeal","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourSeal","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourSeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourSeal","text":"","code":"check_HarbourSeal(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourSeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourSeal","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_HarbourSeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_HarbourSeal","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PhysicalChemical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PhysicalChemical","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PhysicalChemical","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PhysicalChemical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PhysicalChemical","text":"","code":"check_PhysicalChemical(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PhysicalChemical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PhysicalChemical","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PhysicalChemical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PhysicalChemical","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Phytoplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Phytoplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Phytoplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Phytoplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Phytoplankton","text":"","code":"check_Phytoplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Phytoplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Phytoplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Phytoplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Phytoplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Picoplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Picoplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Picoplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Picoplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Picoplankton","text":"","code":"check_Picoplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Picoplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Picoplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Picoplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Picoplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PrimaryProduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PrimaryProduction","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PrimaryProduction","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PrimaryProduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PrimaryProduction","text":"","code":"check_PrimaryProduction(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PrimaryProduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PrimaryProduction","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_PrimaryProduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_PrimaryProduction","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_RingedSeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_RingedSeal","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_RingedSeal","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_RingedSeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_RingedSeal","text":"","code":"check_RingedSeal(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_RingedSeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_RingedSeal","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_RingedSeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_RingedSeal","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_SealPathology.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_SealPathology","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_SealPathology","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_SealPathology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_SealPathology","text":"","code":"check_SealPathology(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_SealPathology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_SealPathology","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_SealPathology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_SealPathology","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Sedimentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Sedimentation","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Sedimentation","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Sedimentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Sedimentation","text":"","code":"check_Sedimentation(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Sedimentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Sedimentation","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Sedimentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Sedimentation","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zoobenthos.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zoobenthos","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zoobenthos","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zoobenthos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zoobenthos","text":"","code":"check_Zoobenthos(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zoobenthos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zoobenthos","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zoobenthos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zoobenthos","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zooplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zooplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zooplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zooplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zooplankton","text":"","code":"check_Zooplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zooplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zooplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_Zooplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_Zooplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_carbon","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_carbon","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_carbon","text":"","code":"check_bacterial_carbon(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_carbon","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_carbon","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_concentration.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_concentration","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_concentration","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_concentration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_concentration","text":"","code":"check_bacterial_concentration(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_concentration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_concentration","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_concentration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_concentration","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_production","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_production","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_production","text":"","code":"check_bacterial_production(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_production","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_bacterial_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_bacterial_production","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_chlorophyll_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_chlorophyll_conc","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_chlorophyll_conc","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_chlorophyll_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_chlorophyll_conc","text":"","code":"check_chlorophyll_conc(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_chlorophyll_conc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_chlorophyll_conc","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_chlorophyll_conc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_chlorophyll_conc","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_code_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Check matches of reported project (PROJ) codes in SMHIs codelist — check_code_proj","title":"Check matches of reported project (PROJ) codes in SMHIs codelist — check_code_proj","text":"Check matches reported project (PROJ) codes SMHIs codelist","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_code_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check matches of reported project (PROJ) codes in SMHIs codelist — check_code_proj","text":"","code":"check_code_proj(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_code_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check matches of reported project (PROJ) codes in SMHIs codelist — check_code_proj","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_code_proj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check matches of reported project (PROJ) codes in SMHIs codelist — check_code_proj","text":"unmatched codes true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_data_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if dataset versions are up to date — check_data_version","title":"Check if dataset versions are up to date — check_data_version","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function checks status dataset versions comparing latest available versions.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_data_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if dataset versions are up to date — check_data_version","text":"","code":"check_data_version(dataset_file_name)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_data_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if dataset versions are up to date — check_data_version","text":"dataset_file_name character vector containing dataset file names (.zip extension).","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_data_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if dataset versions are up to date — check_data_version","text":"data frame indicating status dataset versions, including whether date.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_data_version.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if dataset versions are up to date — check_data_version","text":"function compares provided dataset file names latest versions available SHARKdata repository. returns data frame information dataset, specifying whether date .","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_data_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if dataset versions are up to date — check_data_version","text":"","code":"# Example with a list of dataset file names if (FALSE) { # \\dontrun{ datasets <- load_dataset_names(\"Phytoplankton\") dataset_names <- unique(datasets$dataset_name[1:5]) data <- download_sharkdata(dataset_names) status_list <- check_data_version(data$dataset_file_name) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_datatype.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present. — check_datatype","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present. — check_datatype","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_datatype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present. — check_datatype","text":"","code":"check_datatype(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_datatype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present. — check_datatype","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_datatype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present. — check_datatype","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Bacterioplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present in intial deliveries of data (delivery validation). — check_deliv_Bacterioplankton","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present in intial deliveries of data (delivery validation). — check_deliv_Bacterioplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Bacterioplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present in intial deliveries of data (delivery validation). — check_deliv_Bacterioplankton","text":"","code":"check_deliv_Bacterioplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Bacterioplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present in intial deliveries of data (delivery validation). — check_deliv_Bacterioplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Bacterioplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended global and datatype-specific SHARK system fields (different between different datatypes) are present in intial deliveries of data (delivery validation). — check_deliv_Bacterioplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Chlorophyll.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Chlorophyll","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Chlorophyll","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Chlorophyll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Chlorophyll","text":"","code":"check_deliv_Chlorophyll(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Chlorophyll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Chlorophyll","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Chlorophyll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Chlorophyll","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Epibenthos.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Epibenthos","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Epibenthos","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Epibenthos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Epibenthos","text":"","code":"check_deliv_Epibenthos(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Epibenthos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Epibenthos","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Epibenthos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Epibenthos","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_EpibenthosDropvideo.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_EpibenthosDropvideo","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_EpibenthosDropvideo","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_EpibenthosDropvideo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_EpibenthosDropvideo","text":"","code":"check_deliv_EpibenthosDropvideo(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_EpibenthosDropvideo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_EpibenthosDropvideo","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_EpibenthosDropvideo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_EpibenthosDropvideo","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_GreySeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_GreySeal","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_GreySeal","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_GreySeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_GreySeal","text":"","code":"check_deliv_GreySeal(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_GreySeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_GreySeal","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_GreySeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_GreySeal","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourPorpoise.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourPorpoise","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourPorpoise","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourPorpoise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourPorpoise","text":"","code":"check_deliv_HarbourPorpoise(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourPorpoise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourPorpoise","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourPorpoise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourPorpoise","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourSeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourSeal","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourSeal","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourSeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourSeal","text":"","code":"check_deliv_HarbourSeal(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourSeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourSeal","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_HarbourSeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_HarbourSeal","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PhysicalChemical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PhysicalChemical","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PhysicalChemical","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PhysicalChemical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PhysicalChemical","text":"","code":"check_deliv_PhysicalChemical(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PhysicalChemical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PhysicalChemical","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PhysicalChemical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PhysicalChemical","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Phytoplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Phytoplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Phytoplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Phytoplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Phytoplankton","text":"","code":"check_deliv_Phytoplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Phytoplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Phytoplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Phytoplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Phytoplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Picoplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Picoplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Picoplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Picoplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Picoplankton","text":"","code":"check_deliv_Picoplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Picoplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Picoplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Picoplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Picoplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PrimaryProduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PrimaryProduction","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PrimaryProduction","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PrimaryProduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PrimaryProduction","text":"","code":"check_deliv_PrimaryProduction(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PrimaryProduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PrimaryProduction","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_PrimaryProduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_PrimaryProduction","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_RingedSeal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_RingedSeal","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_RingedSeal","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_RingedSeal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_RingedSeal","text":"","code":"check_deliv_RingedSeal(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_RingedSeal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_RingedSeal","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_RingedSeal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_RingedSeal","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_SealPathology.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_SealPathology","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_SealPathology","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_SealPathology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_SealPathology","text":"","code":"check_deliv_SealPathology(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_SealPathology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_SealPathology","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_SealPathology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_SealPathology","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Sedimentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Sedimentation","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Sedimentation","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Sedimentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Sedimentation","text":"","code":"check_deliv_Sedimentation(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Sedimentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Sedimentation","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Sedimentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Sedimentation","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zoobenthos.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zoobenthos","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zoobenthos","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zoobenthos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zoobenthos","text":"","code":"check_deliv_Zoobenthos(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zoobenthos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zoobenthos","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zoobenthos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zoobenthos","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zooplankton.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zooplankton","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zooplankton","text":"Missing empty required fields reported errors, missing empty recommended fields reported warnings.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zooplankton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zooplankton","text":"","code":"check_deliv_Zooplankton(data, level = \"error\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zooplankton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zooplankton","text":"data data frame. level level error reporting, .e. \"error\" \"warning\". Recommended fields checked case \"warning\".","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_deliv_Zooplankton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the required and recommended datatype-specific SHARK system fields (different between different datatypes) are present. — check_deliv_Zooplankton","text":"warnings errors.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Check which points have potentially invalid depths. — check_depth","title":"Check which points have potentially invalid depths. — check_depth","text":"Check points potentially invalid depths.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check which points have potentially invalid depths. — check_depth","text":"","code":"check_depth(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check which points have potentially invalid depths. — check_depth","text":"data data frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check which points have potentially invalid depths. — check_depth","text":"Problematic records errors report.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_abundclass_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_abundclass_logical","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_abundclass_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_abundclass_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_abundclass_logical","text":"","code":"check_epibenthos_abundclass_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_abundclass_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_abundclass_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_abundclass_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_abundclass_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_counted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_counted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_counted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_counted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_counted","text":"","code":"check_epibenthos_counted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_counted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_counted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_counted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_counted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_cover_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_cover_logical","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_cover_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_cover_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_cover_logical","text":"","code":"check_epibenthos_cover_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_cover_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_cover_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_cover_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_cover_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverclass_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverclass_logical","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverclass_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverclass_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverclass_logical","text":"","code":"check_epibenthos_coverclass_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverclass_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverclass_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverclass_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverclass_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverpercent_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverpercent_logical","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverpercent_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverpercent_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverpercent_logical","text":"","code":"check_epibenthos_coverpercent_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverpercent_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverpercent_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_coverpercent_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_coverpercent_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_dryweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_dryweight","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_dryweight","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_dryweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_dryweight","text":"","code":"check_epibenthos_dryweight(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_dryweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_dryweight","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_dryweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_dryweight","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_sedimentdepos_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_sedimentdepos_logical","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_sedimentdepos_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_sedimentdepos_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_sedimentdepos_logical","text":"","code":"check_epibenthos_sedimentdepos_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_sedimentdepos_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_sedimentdepos_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_sedimentdepos_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_sedimentdepos_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_maxdepth.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_maxdepth","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_maxdepth","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_maxdepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_maxdepth","text":"","code":"check_epibenthos_specdistr_maxdepth(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_maxdepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_maxdepth","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_maxdepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_maxdepth","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_mindepth.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_mindepth","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_mindepth","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_mindepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_mindepth","text":"","code":"check_epibenthos_specdistr_mindepth(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_mindepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_mindepth","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_specdistr_mindepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_epibenthos_specdistr_mindepth","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_totcover_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_totcover_logical","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_totcover_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_totcover_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_totcover_logical","text":"","code":"check_epibenthos_totcover_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_totcover_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_totcover_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_epibenthos_totcover_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_epibenthos_totcover_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_greyseal_counted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_greyseal_counted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_greyseal_counted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_greyseal_counted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_greyseal_counted","text":"","code":"check_greyseal_counted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_greyseal_counted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_greyseal_counted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_greyseal_counted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_greyseal_counted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbourseal_counted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbourseal_counted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbourseal_counted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbourseal_counted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbourseal_counted","text":"","code":"check_harbourseal_counted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbourseal_counted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbourseal_counted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbourseal_counted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbourseal_counted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbporp_positivemin.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbporp_positivemin","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbporp_positivemin","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbporp_positivemin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbporp_positivemin","text":"","code":"check_harbporp_positivemin(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbporp_positivemin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbporp_positivemin","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_harbporp_positivemin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_harbporp_positivemin","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_onland.html","id":null,"dir":"Reference","previous_headings":"","what":"Check which points are located on land. — check_onland","title":"Check which points are located on land. — check_onland","text":"Check points located land.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_onland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check which points are located on land. — check_onland","text":"","code":"check_onland(data, land = NULL, report = FALSE, buffer = 0, offline = FALSE)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_onland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check which points are located on land. — check_onland","text":"data data frame. land SpatialPolygonsDataFrame. provided simplified land polygons OSM used. parameter ignored , offline =   FALSE. report TRUE, errors returned instead records. buffer Set far inland points still deemed valid (meters). offline TRUE, local simplified shoreline used, otherwise OBIS webservice used. default value FALSE.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_onland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check which points are located on land. — check_onland","text":"Errors problematic records.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_onland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check which points are located on land. — check_onland","text":"","code":"if (FALSE) { # \\dontrun{ report <- check_onland(abra, report = TRUE, buffer = 100) print(report) # plot records on land with 100 meter buffer plot_map_leaflet(abra[report$row,], popup = \"id\") # filter records not on land ok <- abra[-1 * report$row,] ok <- check_onland(abra, report = FALSE, buffer = 100) print(nrow(ok)) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_abund.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_abund","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_abund","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_abund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_abund","text":"","code":"check_phytoplankton_abund(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_abund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_abund","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_abund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_abund","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_biovol.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_biovol","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_biovol","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_biovol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_biovol","text":"","code":"check_phytoplankton_biovol(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_biovol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_biovol","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_biovol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_biovol","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_carbon","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_carbon","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_carbon","text":"","code":"check_phytoplankton_carbon(data)  check_phytoplankton_carbon(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_carbon","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_phytoplankton_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_phytoplankton_carbon","text":"tibble data outliers tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_abundance","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_abundance","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_abundance","text":"","code":"check_picoplankton_abundance(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_abundance","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_abundance","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_biovol.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_biovol","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_biovol","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_biovol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_biovol","text":"","code":"check_picoplankton_biovol(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_biovol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_biovol","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_biovol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_biovol","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_carbon","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_carbon","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_carbon","text":"","code":"check_picoplankton_carbon(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_carbon","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_carbon","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_counted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_counted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_counted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_counted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_counted","text":"","code":"check_picoplankton_counted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_counted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_counted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_picoplankton_counted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_picoplankton_counted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod","text":"","code":"check_primaryproduction_carbonprod(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod_hour.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod_hour","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod_hour","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod_hour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod_hour","text":"","code":"check_primaryproduction_carbonprod_hour(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod_hour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod_hour","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprod_hour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprod_hour","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprodlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprodlight","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprodlight","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprodlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprodlight","text":"","code":"check_primaryproduction_carbonprodlight(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprodlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprodlight","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_primaryproduction_carbonprodlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_primaryproduction_carbonprodlight","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_ringedseal_calccounted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_ringedseal_calccounted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_ringedseal_calccounted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_ringedseal_calccounted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_ringedseal_calccounted","text":"","code":"check_ringedseal_calccounted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_ringedseal_calccounted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_ringedseal_calccounted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_ringedseal_calccounted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_ringedseal_calccounted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_station_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Station distance check using SMHI station list ","title":"Station distance check using SMHI station list ","text":"Station distance check using SMHI station list \"stations.txt\" (list synced \"Stationsregistret\": https://stationsregister.miljodatasamverkan.se/stationsregister/composer/) matches reported station name data curated station list checks within preset distance","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_station_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Station distance check using SMHI station list ","text":"","code":"check_station_distance(names)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_station_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Station distance check using SMHI station list ","text":"names Vector station names.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_station_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Station distance check using SMHI station list ","text":"Data frame station name logical value within/outside preset distance limits.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_value_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_value_logical","title":"Check logical assumptions of data for specific variables and parameters — check_value_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_value_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_value_logical","text":"","code":"check_value_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_value_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_value_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_value_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_value_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for station positions — check_zero_positions","title":"Check logical assumptions of data for station positions — check_zero_positions","text":"Check logical assumptions data station positions","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for station positions — check_zero_positions","text":"","code":"check_zero_positions(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for station positions — check_zero_positions","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for station positions — check_zero_positions","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_zero_value","title":"Check logical assumptions of data for specific variables and parameters — check_zero_value","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_zero_value","text":"","code":"check_zero_value(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_zero_value","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zero_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_zero_value","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_BQIm","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_BQIm","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_BQIm","text":"","code":"check_zoobenthos_BQIm(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_BQIm","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_BQIm","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_BQIm_logical","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_BQIm_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_BQIm_logical","text":"","code":"check_zoobenthos_BQIm_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_BQIm_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_BQIm_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_BQIm_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_abund.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_abund","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_abund","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_abund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_abund","text":"","code":"check_zoobenthos_abund(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_abund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_abund","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_abund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_abund","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_counted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_counted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_counted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_counted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_counted","text":"","code":"check_zoobenthos_counted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_counted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_counted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_counted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_counted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_wetweight","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_wetweight","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_wetweight","text":"","code":"check_zoobenthos_wetweight(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_wetweight","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zoobenthos_wetweight","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_wetweight_logical","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_wetweight_logical","text":"Check logical assumptions data specific variables parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_wetweight_logical","text":"","code":"check_zoobenthos_wetweight_logical(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_wetweight_logical","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zoobenthos_wetweight_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check logical assumptions of data for specific variables and parameters — check_zoobenthos_wetweight_logical","text":"logical test true false results","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_abund.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_abund","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_abund","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_abund.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_abund","text":"","code":"check_zooplankton_abund(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_abund.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_abund","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_abund.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_abund","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_carbon","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_carbon","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_carbon","text":"","code":"check_zooplankton_carbon(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_carbon","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_carbon","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_counted.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_counted","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_counted","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_counted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_counted","text":"","code":"check_zooplankton_counted(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_counted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_counted","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_counted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_counted","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_mean","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_mean","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_mean","text":"","code":"check_zooplankton_length_mean(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_mean","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_mean","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_median","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_median","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_median","text":"","code":"check_zooplankton_length_median(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_median","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_length_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_length_median","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight","text":"","code":"check_zooplankton_wetweight(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_area","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_area","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_area","text":"","code":"check_zooplankton_wetweight_area(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_area","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_area","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_volume.html","id":null,"dir":"Reference","previous_headings":"","what":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_volume","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_volume","text":"Uses data national marine monitoring last 5 years identify outliers Ranges IQR (interquantile range) specific parameters adapted datatype","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_volume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_volume","text":"","code":"check_zooplankton_wetweight_volume(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_volume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_volume","text":"data tibble checked","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/check_zooplankton_wetweight_volume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uses data from national marine monitoring for the last 5 years to identify outliers Ranges and IQR (interquantile range) for specific parameters is adapted to each datatype — check_zooplankton_wetweight_volume","text":"tibble data outliers","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/construct_dyntaxa_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","title":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","text":"function constructs taxonomy table based Dyntaxa parent taxon IDs. queries SLU Artdatabanken API (Dyntaxa) fetch taxonomy information organizes data hierarchical table.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/construct_dyntaxa_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","text":"","code":"construct_dyntaxa_table(   parent_ids,   subscription_key,   shark_output = TRUE,   recommended_only = TRUE,   add_genus_children = FALSE,   verbose = TRUE )"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/construct_dyntaxa_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","text":"parent_ids list containing parent taxon IDs taxonomy information requested. subscription_key character string containing subscription key accessing SLU Artdatabanken API. key provided registered users Artdatabanken. shark_output Logical. TRUE, function return selected column headers match SHARK output. FALSE, columns returned. Default TRUE. recommended_only Logical. TRUE, function return recommended (accepted) names. FALSE, names returned. Default TRUE. add_genus_children Logical. TRUE, output include children valid genera taxon_ids present parent_ids. Default FALSE. verbose Logical. Default TRUE.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/construct_dyntaxa_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","text":"data frame representing constructed taxonomy table.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/construct_dyntaxa_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/construct_dyntaxa_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Dyntaxa taxonomy table from API — construct_dyntaxa_table","text":"","code":"if (FALSE) { # \\dontrun{ # Construct Dyntaxa taxonomy table for taxon IDs 238366 and 1010380 parent_ids <- get_dyntaxa_parent_ids(c(238366, 1010380), \"your_subscription_key\") taxonomy_table <- construct_dyntaxa_table(parent_ids, \"your_subscription_key\") print(taxonomy_table) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/data_deliverer_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter datasets based on data deliverer — data_deliverer_filter","title":"Filter datasets based on data deliverer — data_deliverer_filter","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function filters datasets based specified data deliverer.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/data_deliverer_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter datasets based on data deliverer — data_deliverer_filter","text":"","code":"data_deliverer_filter(datasets, data_deliverer)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/data_deliverer_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter datasets based on data deliverer — data_deliverer_filter","text":"datasets input datasets filter. data_deliverer data deliverer filter datasets.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/data_deliverer_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter datasets based on data deliverer — data_deliverer_filter","text":"filtered data frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to download file — download_file","title":"Helper function to download file — download_file","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function downloads file based specified dataset name.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to download file — download_file","text":"","code":"download_file(dataset_name)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to download file — download_file","text":"dataset_name name dataset download.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to download file — download_file","text":"temporary file path.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_sharkdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process SHARKdata datasets — download_sharkdata","title":"Download and process SHARKdata datasets — download_sharkdata","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function downloads processes datasets SHARKdata API based specified dataset names.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_sharkdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process SHARKdata datasets — download_sharkdata","text":"","code":"download_sharkdata(dataset_names)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_sharkdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process SHARKdata datasets — download_sharkdata","text":"dataset_names character vector specifying names datasets downloaded processed.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_sharkdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process SHARKdata datasets — download_sharkdata","text":"processed data frame containing SHARKdata datasets.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_sharkdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and process SHARKdata datasets — download_sharkdata","text":"function performs following steps: Downloads datasets specified names. Reads processes downloaded data. Converts columns appropriate types. Adds Dyntaxa higher taxonomy information biological data stored file. Current taxonomy can accessed via Dyntaxa API , see update_dyntaxa_taxonomy Adds WoRMS higher taxonomy information biological data stored file. Current taxonomy can accessed via WoRMS API , see update_worms_taxonomy Extracts adds geographical information (e.g. location_sea_basin) coordinates.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/download_sharkdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and process SHARKdata datasets — download_sharkdata","text":"","code":"if (FALSE) { # \\dontrun{ datasets <- load_dataset_names(\"Phytoplankton\") dataset_names <- unique(datasets$dataset_name) data <- download_sharkdata(dataset_names)  print(data) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/fill_na_below_first_non_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fill NA values below the first non-NA value in a vector — fill_na_below_first_non_na","title":"Function to fill NA values below the first non-NA value in a vector — fill_na_below_first_non_na","text":"internal function fills NA values first non-NA value vector.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/fill_na_below_first_non_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fill NA values below the first non-NA value in a vector — fill_na_below_first_non_na","text":"","code":"fill_na_below_first_non_na(x)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/fill_na_below_first_non_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fill NA values below the first non-NA value in a vector — fill_na_below_first_non_na","text":"x vector.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/fill_na_below_first_non_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fill NA values below the first non-NA value in a vector — fill_na_below_first_non_na","text":"vector NAs filled first non-NA value.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/filter_outdated_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to filter outdated datasets — filter_outdated_datasets","title":"Function to filter outdated datasets — filter_outdated_datasets","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function filters outdated datasets current data based provided list datasets update.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/filter_outdated_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to filter outdated datasets — filter_outdated_datasets","text":"","code":"filter_outdated_datasets(data, datasets_to_update)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/filter_outdated_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to filter outdated datasets — filter_outdated_datasets","text":"data data frame containing current data. datasets_to_update data frame containing information datasets need updated.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/filter_outdated_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to filter outdated datasets — filter_outdated_datasets","text":"filtered data frame excluding outdated datasets.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_species_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather species information — gather_species_info","title":"Gather species information — gather_species_info","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function gathers species information shark species list.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_species_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather species information — gather_species_info","text":"","code":"gather_species_info(shark_species_list)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_species_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather species information — gather_species_info","text":"shark_species_list data frame containing shark species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_species_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather species information — gather_species_info","text":"data frame containing gathered species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_worms_species_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather WoRMS species information — gather_worms_species_info","title":"Gather WoRMS species information — gather_worms_species_info","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function gathers WoRMS species information taxa_worms data frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_worms_species_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather WoRMS species information — gather_worms_species_info","text":"","code":"gather_worms_species_info(taxa_worms)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_worms_species_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather WoRMS species information — gather_worms_species_info","text":"taxa_worms data frame containing WoRMS species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/gather_worms_species_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather WoRMS species information — gather_worms_species_info","text":"data frame containing gathered WoRMS species information.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","title":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","text":"function queries SLU Artdatabanken API (Dyntaxa) retrieve children taxon hierarchy information specified taxon IDs. constructs request provided taxon IDs, sends request SLU Artdatabanken API, processes response return data frame taxon children.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","text":"","code":"get_dyntaxa_children_hierarchy(   taxon_ids,   subscription_key,   levels = 1,   main_children = TRUE,   verbose = TRUE )"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","text":"taxon_ids vector numeric taxon IDs children taxon IDs requested. subscription_key character string containing subscription key accessing SLU Artdatabanken API. key provided registered users Artdatabanken. levels Integer. Default 1 main_children Logical. Default TRUE. verbose Logical. Default TRUE.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","text":"data frame containing children taxon information corresponding specified taxon IDs.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_hierarchy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children hierarchies for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_hierarchy","text":"","code":"if (FALSE) { # \\dontrun{ # Get children taxon hierarchy for taxon IDs 1010608 and 5000062 children_hierarchy <- get_dyntaxa_children_hierarchy(c(1010608, 5000062), \"your_subscription_key\") print(children_hierarchy) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","title":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","text":"function queries SLU Artdatabanken API (Dyntaxa) retrieve children taxon IDs specified taxon IDs. constructs request provided taxon IDs, sends request SLU Artdatabanken API, processes response return list children taxon IDs.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","text":"","code":"get_dyntaxa_children_ids(   taxon_ids,   subscription_key,   main_children = TRUE,   verbose = TRUE )"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","text":"taxon_ids vector numeric taxon IDs children taxon IDs requested. subscription_key character string containing subscription key accessing SLU Artdatabanken API. key provided registered users Artdatabanken. main_children Logical. Default TRUE. verbose Logical. Default TRUE.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","text":"list containing children taxon IDs corresponding specified taxon IDs.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_children_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_children_ids","text":"","code":"if (FALSE) { # \\dontrun{ # Get children taxon IDs for taxon IDs 1010608 and 5000062 children_ids <- get_dyntaxa_children_ids(c(1010608, 5000062), \"your_subscription_key\") print(children_ids) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_parent_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","title":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","text":"function queries SLU Artdatabanken API (Dyntaxa) retrieve parent taxon IDs specified taxon IDs. constructs request provided taxon IDs, sends request SLU Artdatabanken API, processes response return list parent taxon IDs.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_parent_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","text":"","code":"get_dyntaxa_parent_ids(taxon_ids, subscription_key, verbose = TRUE)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_parent_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","text":"taxon_ids vector numeric taxon IDs parent taxon IDs requested. subscription_key character string containing subscription key accessing SLU Artdatabanken API. key provided registered users Artdatabanken. verbose Logical. Default TRUE.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_parent_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","text":"list containing parent taxon IDs corresponding specified taxon IDs.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_parent_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_parent_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get parent taxon IDs for specified taxon IDs from SLU Artdatabanken API (Dyntaxa) — get_dyntaxa_parent_ids","text":"","code":"if (FALSE) { # \\dontrun{ # Get parent taxon IDs for taxon IDs 238366 and 1010380 parent_ids <- get_dyntaxa_parent_ids(c(238366, 1010380), \"your_subscription_key\") print(parent_ids) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","title":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","text":"function queries SLU Artdatabanken API (Dyntaxa) retrieve taxonomic information specified taxon IDs. constructs request provided taxon IDs, sends request SLU Artdatabanken API, processes response return taxonomic information data frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","text":"","code":"get_dyntaxa_records(taxon_ids, subscription_key)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","text":"taxon_ids vector numeric taxon IDs (Dyntaxa ID) taxonomic information requested. subscription_key character string containing subscription key accessing SLU Artdatabanken API. key provided registered users Artdatabanken.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","text":"data frame containing taxonomic information specified taxon IDs. Columns include taxonId, names, category, rank, isRecommended, parentTaxonId.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_records.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_dyntaxa_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomic information from SLU Artdatabanken API for specified taxon IDs — get_dyntaxa_records","text":"","code":"if (FALSE) { # \\dontrun{ # Get taxonomic information for taxon IDs 238366 and 1010380 taxon_info <- get_dyntaxa_records(c(238366, 1010380), \"your_subscription_key\") print(taxon_info) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_geographical_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get geographical information from coordinates — get_geographical_info","title":"Get geographical information from coordinates — get_geographical_info","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function enriches provided data geographical information based latitude longitude coordinates Baltic Sea, Kattegat Skagerrak.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_geographical_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get geographical information from coordinates — get_geographical_info","text":"","code":"get_geographical_info(latitude_dd, longitude_dd)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_geographical_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get geographical information from coordinates — get_geographical_info","text":"latitude_dd numeric vector representing latitude coordinates decimal degrees. longitude_dd numeric vector representing longitude coordinates decimal degrees.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_geographical_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get geographical information from coordinates — get_geographical_info","text":"data frame containing original coordinates added geographical information location_type_area, location_svar_sea_area_name location_sea_basin.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_geographical_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get geographical information from coordinates — get_geographical_info","text":"function reads shapefiles basin names assign geographical information dataset. provides details location type area Svar Sea area name based given coordinates.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_geographical_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get geographical information from coordinates — get_geographical_info","text":"","code":"if (FALSE) { # \\dontrun{ latitude <- c(58.25830, 58.59367, 63.49983) longitude <- c(11.43330, 18.23550, 19.81933) dataset_with_geo_info <- get_geographical_info(latitude, longitude) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Available Search Options from SHARK API — get_shark_options","title":"Retrieve Available Search Options from SHARK API — get_shark_options","text":"get_shark_options function retrieves available search options SHARK database hosted SMHI. sends GET request SHARK API returns results structured data.frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Available Search Options from SHARK API — get_shark_options","text":"","code":"get_shark_options(prod = TRUE)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Available Search Options from SHARK API — get_shark_options","text":"prod Logical. Query PROD TEST (SMHI internal) server. Default TRUE (PROD).","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Available Search Options from SHARK API — get_shark_options","text":"data.frame containing available search options SHARK API.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Available Search Options from SHARK API — get_shark_options","text":"function sends GET request SHARK API options endpoint retrieve available search filters options querying database. API returns data JSON format, parsed data.frame.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Available Search Options from SHARK API — get_shark_options","text":"","code":"if (FALSE) { # \\dontrun{   # Retrieve available search options   shark_options <- get_shark_options()   View(shark_options)      # View available datatypes   dataTypes <- unlist(shark_options$dataTypes)   print(dataTypes) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","title":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","text":"get_shark_table function retrieves data SHARK database hosted SMHI, options filter based year range, months, data types. sends POST request SHARK API returns results structured data.frame. view available filter options, see get_shark_options.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","text":"","code":"get_shark_table(   tableView = \"sharkweb_overview\",   limit = 0,   headerLang = \"internal_key\",   fromYear = 2019,   toYear = 2020,   months = c(),   dataTypes = c(),   parameters = c(),   orderers = c(),   qualityFlags = c(),   deliverers = c(),   projects = c(),   datasets = c(),   minSamplingDepth = \"\",   maxSamplingDepth = \"\",   checkStatus = \"\",   redListedCategory = c(),   taxonName = c(),   stationName = c(),   vattenDistrikt = c(),   seaBasins = c(),   counties = c(),   municipalities = c(),   waterCategories = c(),   typOmraden = c(),   helcomOspar = c(),   seaAreas = c(),   offset = 0,   prod = TRUE )"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","text":"tableView Character. Specifies view table retrieve. Options include: \"sharkweb_overview\"  \"sharkweb_all\"  \"sharkdata_bacterioplankton\"  \"sharkdata_chlorophyll\"  \"sharkdata_epibenthos\"  \"sharkdata_greyseal\"  \"sharkdata_harbourporpoise\"  \"sharkdata_harbourseal\"  \"sharkdata_jellyfish\"  \"sharkdata_physicalchemical_columns\"  \"sharkdata_phytoplankton\"  \"sharkdata_picoplankton\"  \"sharkdata_planktonbarcoding\"  \"sharkdata_primaryproduction\"  \"sharkdata_ringedseal\"  \"sharkdata_sealpathology\"  \"sharkdata_sedimentation\"  \"sharkdata_zoobenthos\"  \"sharkdata_zooplankton\"  \"report_sum_year_param\"  \"report_sum_year_param_taxon\"  \"report_sampling_per_station\"  \"report_obs_taxon\"  \"report_stations\"  \"report_taxon\"  Default \"sharkweb_overview\". limit Integer. Maximum number records retrieve per request. Default 0 (records). headerLang Character. Language option column headers. Possible values: \"sv\": Swedish \"en\": English \"short\": Shortened version \"internal_key\": Internal key (default) fromYear Integer. starting year data retrieve. Default 2019. toYear Integer. ending year data retrieve. Default 2020. months Integer vector. months retrieve data , e.g., c(4, 5, 6) April June. dataTypes Character vector. Specifies data types filter, \"Chlorophyll\" \"Epibenthos\". parameters Character vector. Optional vector parameters filter results, \"Chlorophyll-\". orderers Character vector. Optional vector orderers filter data specific individuals organizations. qualityFlags Character vector. Optional vector quality flags filter data. deliverers Character vector. Optional vector deliverers filter data data providers. projects Character vector. Optional vector projects filter data specific research monitoring projects. datasets Character vector. Optional vector datasets filter data specific dataset names. minSamplingDepth Numeric. Optional minimum depth (meters) sampling data filter results. maxSamplingDepth Numeric. Optional maximum depth (meters) sampling data filter results. checkStatus Character string. Optional status check filter results. redListedCategory Character vector. Optional vector red-listed taxa conservation filtering. taxonName Character vector. Optional vector taxa names filtering specific species taxa. stationName Character vector. Optional vector station names retrieve data specific stations. vattenDistrikt Character vector. Optional vector water district names filter data Swedish water districts. seaBasins Character vector. Optional vector sea basin names filter data different sea areas. counties Character vector. Optional vector counties filter data within specific administrative regions Sweden. municipalities Character vector. Optional vector municipalities filter data within specific local administrative regions. waterCategories Character vector. Optional vector water categories filter . typOmraden Character vector. Optional vector type areas filter data specific areas. helcomOspar Character vector. Optional vector HELCOM OSPAR areas regional filtering. seaAreas Character vector. Optional vector sea area codes filtering specific sea areas offset Integer. starting point data retrieval, useful pagination. Default 0. prod Logical. Query PROD TEST (SMHI internal) server. Default TRUE (PROD).","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","text":"data.frame containing retrieved data, column names based API's headers. Columns filled NA rows differing lengths.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","text":"function constructs JSON body specified parameters sends POST request SHARK API. API returns data JSON format, parsed data.frame. rows differing lengths, rbind.fill fills missing columns NA.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve and Format SHARK Data from SMHI API — get_shark_table","text":"","code":"if (FALSE) { # \\dontrun{   # Retrieve chlorophyll data for April to June from 2019 to 2020   shark_data <- get_shark_table(fromYear = 2019, toYear = 2020,                                 months = c(4, 5, 6), dataTypes = c(\"Chlorophyll\"))   View(shark_data) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","title":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","text":"get_shark_table_counts function retrieves row counts data records various SHARK data tables. view available filter options, see get_shark_options.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","text":"","code":"get_shark_table_counts(   tableView = \"sharkweb_overview\",   fromYear = 2019,   toYear = 2020,   months = c(),   dataTypes = c(),   parameters = c(),   orderers = c(),   qualityFlags = c(),   deliverers = c(),   projects = c(),   datasets = c(),   minSamplingDepth = \"\",   maxSamplingDepth = \"\",   checkStatus = \"\",   redListedCategory = c(),   taxonName = c(),   stationName = c(),   vattenDistrikt = c(),   seaBasins = c(),   counties = c(),   municipalities = c(),   waterCategories = c(),   typOmraden = c(),   helcomOspar = c(),   seaAreas = c(),   prod = TRUE )"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","text":"tableView Character. Specifies view table retrieve. Options include: \"sharkweb_overview\"  \"sharkweb_all\"  \"sharkdata_bacterioplankton\"  \"sharkdata_chlorophyll\"  \"sharkdata_epibenthos\"  \"sharkdata_greyseal\"  \"sharkdata_harbourporpoise\"  \"sharkdata_harbourseal\"  \"sharkdata_jellyfish\"  \"sharkdata_physicalchemical_columns\"  \"sharkdata_phytoplankton\"  \"sharkdata_picoplankton\"  \"sharkdata_planktonbarcoding\"  \"sharkdata_primaryproduction\"  \"sharkdata_ringedseal\"  \"sharkdata_sealpathology\"  \"sharkdata_sedimentation\"  \"sharkdata_zoobenthos\"  \"sharkdata_zooplankton\"  \"report_sum_year_param\"  \"report_sum_year_param_taxon\"  \"report_sampling_per_station\"  \"report_obs_taxon\"  \"report_stations\"  \"report_taxon\"  Default \"sharkweb_overview\". fromYear Integer. starting year data retrieve. Default 2019. toYear Integer. ending year data retrieve. Default 2020. months Integer vector. months retrieve data (e.g., c(4, 5, 6) April June). dataTypes Character vector. Specifies data types filter, \"Chlorophyll\" \"Epibenthos\". parameters Character vector. Optional. Parameters filter results, \"Chlorophyll-\". orderers Character vector. Optional. Orderers filter data specific organizations. qualityFlags Character vector. Optional. Quality flags filter data. deliverers Character vector. Optional. Deliverers filter data data providers. projects Character vector. Optional. Projects filter data specific research monitoring projects. datasets Character vector. Optional. Datasets filter data specific dataset names. minSamplingDepth Numeric. Optional. Minimum depth (meters) sampling data. maxSamplingDepth Numeric. Optional. Maximum depth (meters) sampling data. checkStatus Character string. Optional. Status check filter results. redListedCategory Character vector. Optional. Red-listed taxa conservation filtering. taxonName Character vector. Optional. Taxa names filtering specific species taxa. stationName Character vector. Optional. Station names retrieve data specific stations. vattenDistrikt Character vector. Optional. Water district names filter data Swedish water districts. seaBasins Character vector. Optional. Sea basin names filter data different sea areas. counties Character vector. Optional. Counties filter data within specific administrative regions Sweden. municipalities Character vector. Optional. Municipalities filter data within specific local regions. waterCategories Character vector. Optional. Water categories filter data . typOmraden Character vector. Optional. Type areas filter data specific areas. helcomOspar Character vector. Optional. HELCOM OSPAR areas regional filtering. seaAreas Character vector. Optional. Sea area codes filtering specific sea areas. prod Logical. Query PROD TEST (SMHI internal) server. Default TRUE (PROD).","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","text":"data.frame containing retrieved data, column names based API's headers. Missing columns rows differing lengths filled NA.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","text":"function constructs JSON body using specified parameters sends POST request SHARK API. returned JSON data parsed data.frame. Rows differing lengths handled filling missing columns NA.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/get_shark_table_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve SHARK Data Table Row Counts — get_shark_table_counts","text":"","code":"if (FALSE) { # \\dontrun{   # Retrieve chlorophyll data for April to June from 2019 to 2020   shark_data_counts <- get_shark_table_counts(fromYear = 2019, toYear = 2020,                                               months = c(4, 5, 6), dataTypes = c(\"Chlorophyll\"))   print(shark_data_counts) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Load dataset names from SHARKdata based on type, year, and data deliverer — load_dataset_names","title":"Load dataset names from SHARKdata based on type, year, and data deliverer — load_dataset_names","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function gets dataset names fron SHARKdata API based specified data type, year, data deliverer.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load dataset names from SHARKdata based on type, year, and data deliverer — load_dataset_names","text":"","code":"load_dataset_names(dataset_type, year = NA, data_deliverer = NA)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load dataset names from SHARKdata based on type, year, and data deliverer — load_dataset_names","text":"dataset_type type dataset load. year year filter datasets based dataset name (default NA results available years). Please note dataset names can contain multiple years (e.g. dataset data 2012-2014 selected specifying year 2013 argument). Consider filter data download extensive data. data_deliverer data deliverer (code) filter datasets (default NA, results deliverers). See SMHI codelist available codes. Consider filter data download extensive data.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load dataset names from SHARKdata based on type, year, and data deliverer — load_dataset_names","text":"data frame containing filtered dataset names.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load dataset names from SHARKdata based on type, year, and data deliverer — load_dataset_names","text":"","code":"if (FALSE) { # \\dontrun{ # All Zoobenthos datasets load_dataset_names(\"Zoobenthos\")  # All Phytoplankton datasets from 2012:2020 from SMHI and UMSC. load_dataset_names(\"Phytoplankton\", year = 2012:2020, data_deliverer = c(\"SMHI\", \"UMSC\")) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_types.html","id":null,"dir":"Reference","previous_headings":"","what":"List available dataset types in SHARKdata — load_dataset_types","title":"List available dataset types in SHARKdata — load_dataset_types","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function lists available dataset types SHARKdata API.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available dataset types in SHARKdata — load_dataset_types","text":"","code":"load_dataset_types()"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available dataset types in SHARKdata — load_dataset_types","text":"vector unique dataset types.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dataset_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available dataset types in SHARKdata — load_dataset_types","text":"","code":"if (FALSE) { # \\dontrun{ all_dataset_types <- load_dataset_types() } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dyntaxa_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Load higher taxonomy from Dyntaxa file — load_dyntaxa_taxonomy","title":"Load higher taxonomy from Dyntaxa file — load_dyntaxa_taxonomy","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function loads higher taxonomy information Dyntaxa file.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dyntaxa_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load higher taxonomy from Dyntaxa file — load_dyntaxa_taxonomy","text":"","code":"load_dyntaxa_taxonomy(dyntaxa_id_input)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dyntaxa_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load higher taxonomy from Dyntaxa file — load_dyntaxa_taxonomy","text":"dyntaxa_id_input vector Dyntaxa IDs filter higher taxonomy.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_dyntaxa_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load higher taxonomy from Dyntaxa file — load_dyntaxa_taxonomy","text":"data frame containing higher taxonomy information.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_sharkdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Load all dataset names available at SHARKdata from SMHI — load_sharkdata","title":"Load all dataset names available at SHARKdata from SMHI — load_sharkdata","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function loads datasets listed SHARK SMHI calling SHARKdata API.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_sharkdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load all dataset names available at SHARKdata from SMHI — load_sharkdata","text":"","code":"load_sharkdata()"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_sharkdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load all dataset names available at SHARKdata from SMHI — load_sharkdata","text":"data frame containing datasets available SHARKdata","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_sharkdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load all dataset names available at SHARKdata from SMHI — load_sharkdata","text":"","code":"if (FALSE) { # \\dontrun{ all_dataset_names <- load_sharkdata() } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_worms_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Load higher taxonomy from WoRMS file — load_worms_taxonomy","title":"Load higher taxonomy from WoRMS file — load_worms_taxonomy","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function loads higher taxonomy information stored WoRMS taxonomy file.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_worms_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load higher taxonomy from WoRMS file — load_worms_taxonomy","text":"","code":"load_worms_taxonomy(aphia_id_input)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_worms_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load higher taxonomy from WoRMS file — load_worms_taxonomy","text":"aphia_id_input vector Aphia IDs filter higher taxonomy.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/load_worms_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load higher taxonomy from WoRMS file — load_worms_taxonomy","text":"data frame containing higher taxonomy information.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/lookup_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup spatial data for a set of points. — lookup_xy","title":"Lookup spatial data for a set of points. — lookup_xy","text":"Lookup spatial data set points.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/lookup_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup spatial data for a set of points. — lookup_xy","text":"","code":"lookup_xy(data, shoredistance=TRUE, grids=TRUE, areas=FALSE,   asdataframe=TRUE)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/lookup_xy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup spatial data for a set of points. — lookup_xy","text":"data data frame columns sample_longitude_dd sample_latitude_dd. shoredistance Indicate whether shoredistance returned (default TRUE). grids Indicate whether grid values temperature bathymetry returned (default TRUE) areas Indicate whether area values returned distance meters provided points (default FALSE). asdataframe Indicate whether dataframe list returned (default TRUE).","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/lookup_xy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup spatial data for a set of points. — lookup_xy","text":"Data frame list values different requested fields.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/lookup_xy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookup spatial data for a set of points. — lookup_xy","text":"asdataframe FALSE data returned order requested data list, list item requested values. invalid coordinates NULL returned. parameter areas positive integer areas within radius distance meters returned. value TRUE equivalent distance 0 meters, FALSE indicates area results required.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/lookup_xy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup spatial data for a set of points. — lookup_xy","text":"","code":"if (FALSE) { # \\dontrun{ lookup_xy(abra, shoredistance = TRUE, grids = TRUE, areas = FALSE) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_dyntaxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxon matching using Dyntaxa (https://www.dyntaxa.se/) — match_dyntaxa","title":"Taxon matching using Dyntaxa (https://www.dyntaxa.se/) — match_dyntaxa","text":"function deprecated can now replaced using Dyntaxa API. Use match_taxon_name() instead. matches latin name data Dyntaxa taxon list","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_dyntaxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxon matching using Dyntaxa (https://www.dyntaxa.se/) — match_dyntaxa","text":"","code":"match_dyntaxa(names)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_dyntaxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxon matching using Dyntaxa (https://www.dyntaxa.se/) — match_dyntaxa","text":"names Vector scientific names.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_dyntaxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxon matching using Dyntaxa (https://www.dyntaxa.se/) — match_dyntaxa","text":"Data frame scientific name, scientific name ID match type.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_station.html","id":null,"dir":"Reference","previous_headings":"","what":"Station matching using SMHI station list ","title":"Station matching using SMHI station list ","text":"Station matching using SMHI station list \"stations.txt\" (list synced \"Stationsregistret\": https://stationsregister.miljodatasamverkan.se/stationsregister/composer/) matches reported station name data curated station list","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_station.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Station matching using SMHI station list ","text":"","code":"match_station(names)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_station.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Station matching using SMHI station list ","text":"names Vector station names.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_station.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Station matching using SMHI station list ","text":"Data frame station name match type.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_taxon_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Dyntaxa taxon names via API — match_taxon_name","title":"Match Dyntaxa taxon names via API — match_taxon_name","text":"function matches list taxon names SLU Artdatabanken API (Dyntaxa) retrieves best matches along taxon IDs.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_taxon_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Dyntaxa taxon names via API — match_taxon_name","text":"","code":"match_taxon_name(   taxon_names,   subscription_key,   multiple_options = FALSE,   searchFields = \"Both\",   isRecommended = \"NotSet\",   isOkForObservationSystems = \"NotSet\",   culture = \"sv_SE\",   page = 1,   pageSize = 100,   verbose = TRUE )"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_taxon_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Dyntaxa taxon names via API — match_taxon_name","text":"taxon_names vector taxon names match. subscription_key character string containing subscription key accessing SLU Artdatabanken API. key provided registered users Artdatabanken. multiple_options Logical. TRUE, function return multiple matching names. Default FALSE, selecting first match. searchFields character string indicating search fields. Defaults ''. isRecommended character string indicating whether taxon recommended. Defaults 'NotSet'. isOkForObservationSystems character string indicating whether taxon suitable observation systems. Defaults 'NotSet'. culture character string indicating culture. Defaults 'sv_SE'. page integer specifying page number pagination. Defaults 1. pageSize integer specifying page size pagination. Defaults 100. verbose Logical. Print progress bar. Default TRUE.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_taxon_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Dyntaxa taxon names via API — match_taxon_name","text":"data frame containing search pattern, taxon ID, best match taxon name.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_taxon_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match Dyntaxa taxon names via API — match_taxon_name","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_taxon_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Dyntaxa taxon names via API — match_taxon_name","text":"","code":"if (FALSE) { # \\dontrun{ # Match taxon names against SLU Artdatabanken API matched_taxa <- match_taxon_name(c(\"Homo sapiens\", \"Canis lupus\"), \"your_subscription_key\") print(matched_taxa) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_wormstaxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxon matching using WoRMS (http://www.marinespecies.org/) matches latin name in data with WoRMS taxon list — match_wormstaxa","title":"Taxon matching using WoRMS (http://www.marinespecies.org/) matches latin name in data with WoRMS taxon list — match_wormstaxa","text":"Taxon matching using WoRMS (http://www.marinespecies.org/) matches latin name data WoRMS taxon list","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_wormstaxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxon matching using WoRMS (http://www.marinespecies.org/) matches latin name in data with WoRMS taxon list — match_wormstaxa","text":"","code":"match_wormstaxa(names, ask = TRUE)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_wormstaxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxon matching using WoRMS (http://www.marinespecies.org/) matches latin name in data with WoRMS taxon list — match_wormstaxa","text":"names Vector scientific names. ask Ask user case multiple matches.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/match_wormstaxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxon matching using WoRMS (http://www.marinespecies.org/) matches latin name in data with WoRMS taxon list — match_wormstaxa","text":"Data frame scientific name, scientific name ID match type.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/nominal_station.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if stations are reported as nominal position or not Function makes an estimated guess whether stations are nominal — nominal_station","title":"Check if stations are reported as nominal position or not Function makes an estimated guess whether stations are nominal — nominal_station","text":"Check stations reported nominal position Function makes estimated guess whether stations nominal","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/nominal_station.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if stations are reported as nominal position or not Function makes an estimated guess whether stations are nominal — nominal_station","text":"","code":"nominal_station(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/nominal_station.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if stations are reported as nominal position or not Function makes an estimated guess whether stations are nominal — nominal_station","text":"data Data frame.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/nominal_station.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if stations are reported as nominal position or not Function makes an estimated guess whether stations are nominal — nominal_station","text":"Data frame station name latitude longitude positions.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Leaflet map. — plot_map_leaflet","title":"Create a Leaflet map. — plot_map_leaflet","text":"Create Leaflet map.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Leaflet map. — plot_map_leaflet","text":"","code":"plot_map_leaflet(data, provider = \"Esri.OceanBasemap\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Leaflet map. — plot_map_leaflet","text":"data data frame. provider Tile provider, see https://leaflet-extras.github.io/leaflet-providers/preview/. Default Esri.OceanBasemap.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Leaflet map. — plot_map_leaflet","text":"HTML widget object.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet_deliv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Leaflet map. — plot_map_leaflet_deliv","title":"Create a Leaflet map. — plot_map_leaflet_deliv","text":"Create Leaflet map.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet_deliv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Leaflet map. — plot_map_leaflet_deliv","text":"","code":"plot_map_leaflet_deliv(data, provider = \"Esri.OceanBasemap\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet_deliv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Leaflet map. — plot_map_leaflet_deliv","text":"data data frame. provider Tile provider, see https://leaflet-extras.github.io/leaflet-providers/preview/. Default Esri.OceanBasemap.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/plot_map_leaflet_deliv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Leaflet map. — plot_map_leaflet_deliv","text":"HTML widget object.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to read data — read_data","title":"Helper function to read data — read_data","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function reads converts data temporary file.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to read data — read_data","text":"","code":"read_data(temp, filtered_datasets, dataset_name)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to read data — read_data","text":"temp temporary file path. filtered_datasets filtered datasets. dataset_name name dataset.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to read data — read_data","text":"data frame containing read converted data.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_species_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and convert species list — read_species_list","title":"Read and convert species list — read_species_list","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function reads converts species list specified file.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_species_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and convert species list — read_species_list","text":"","code":"read_species_list(filename)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_species_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and convert species list — read_species_list","text":"filename name file containing species list.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/read_species_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and convert species list — read_species_list","text":"data frame containing species list converted columns.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot of user-defined variables and parameters with x- and y-axes automatic selection Interactive plotly plot — scatterplot","title":"Scatterplot of user-defined variables and parameters with x- and y-axes automatic selection Interactive plotly plot — scatterplot","text":"Scatterplot user-defined variables parameters x- y-axes automatic selection Interactive plotly plot","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot of user-defined variables and parameters with x- and y-axes automatic selection Interactive plotly plot — scatterplot","text":"","code":"scatterplot(data, ...)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot of user-defined variables and parameters with x- and y-axes automatic selection Interactive plotly plot — scatterplot","text":"data tibble checked ... Additional parameters","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/scatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatterplot of user-defined variables and parameters with x- and y-axes automatic selection Interactive plotly plot — scatterplot","text":"plotly plot","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read tab delimited files downloaded from SHARK Uses read_delim to read tab delimited files with standardized export format from SHARK — shark_read","title":"Read tab delimited files downloaded from SHARK Uses read_delim to read tab delimited files with standardized export format from SHARK — shark_read","text":"Read tab delimited files downloaded SHARK Uses read_delim read tab delimited files standardized export format SHARK","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read tab delimited files downloaded from SHARK Uses read_delim to read tab delimited files with standardized export format from SHARK — shark_read","text":"","code":"shark_read(filename, type = \"txt\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read tab delimited files downloaded from SHARK Uses read_delim to read tab delimited files with standardized export format from SHARK — shark_read","text":"filename Path file read type File extension. Default .txt.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read tab delimited files downloaded from SHARK Uses read_delim to read tab delimited files with standardized export format from SHARK — shark_read","text":"Data frame file","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read .xlsx files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv","title":"Read .xlsx files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv","text":"Read .xlsx files delivered SHARK Uses readxl read excel files standardized delivery format","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read .xlsx files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv","text":"","code":"shark_read_deliv(filename, skip = 2, sheet = 2)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read .xlsx files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv","text":"filename path file read skip Minimum number rows skip reading anything, column names data. Leading empty rows automatically skipped, lower bound. Ignored range given. Default 2. sheet Sheet read. Either string (name sheet), integer (position sheet). Ignored sheet specified via range. neither argument specifies sheet, defaults second sheet.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read .xlsx files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv","text":"Data frame file","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv_xls.html","id":null,"dir":"Reference","previous_headings":"","what":"Read .xls files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv_xls","title":"Read .xls files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv_xls","text":"Read .xls files delivered SHARK Uses readxl read excel files standardized delivery format","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv_xls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read .xls files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv_xls","text":"","code":"shark_read_deliv_xls(filename, skip = 2, sheet = 2)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv_xls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read .xls files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv_xls","text":"filename path file read skip Minimum number rows skip reading anything, column names data. Leading empty rows automatically skipped, lower bound. Ignored range given. Default 2. sheet Sheet read. Either string (name sheet), integer (position sheet). Ignored sheet specified via range. neither argument specifies sheet, defaults second sheet.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_deliv_xls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read .xls files delivered to SHARK Uses readxl to read excel files with standardized delivery format — shark_read_deliv_xls","text":"Data frame file","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Read zip archive and unzip tab delimited files downloaded from SHARK Uses unzip (unz) and read_delim to unzip archive and read tab delimited files with standardized export format from SHARK — shark_read_zip","title":"Read zip archive and unzip tab delimited files downloaded from SHARK Uses unzip (unz) and read_delim to unzip archive and read tab delimited files with standardized export format from SHARK — shark_read_zip","text":"Read zip archive unzip tab delimited files downloaded SHARK Uses unzip (unz) read_delim unzip archive read tab delimited files standardized export format SHARK","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read zip archive and unzip tab delimited files downloaded from SHARK Uses unzip (unz) and read_delim to unzip archive and read tab delimited files with standardized export format from SHARK — shark_read_zip","text":"","code":"shark_read_zip(zipname, type = \"zip\")"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read zip archive and unzip tab delimited files downloaded from SHARK Uses unzip (unz) and read_delim to unzip archive and read tab delimited files with standardized export format from SHARK — shark_read_zip","text":"zipname path file read type File extension. Default .zip.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/shark_read_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read zip archive and unzip tab delimited files downloaded from SHARK Uses unzip (unz) and read_delim to unzip archive and read tab delimited files with standardized export format from SHARK — shark_read_zip","text":"Data frame file","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to update data if a more recent version is available at SHARKdata — update_data","title":"Function to update data if a more recent version is available at SHARKdata — update_data","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. function updates data updated version available SHARKdata downloading latest datasets.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to update data if a more recent version is available at SHARKdata — update_data","text":"","code":"update_data(data)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to update data if a more recent version is available at SHARKdata — update_data","text":"data data frame containing current data.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to update data if a more recent version is available at SHARKdata — update_data","text":"data frame updated data available.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to update data if a more recent version is available at SHARKdata — update_data","text":"","code":"# Assume you have a sharkdata dataset named 'data' loaded in your R environment # with a 'dataset_file_name' column indicating the file name of the dataset. if (FALSE) { # \\dontrun{ datasets <- load_dataset_names(\"Phytoplankton\") dataset_names <- unique(datasets$dataset_name[1:5]) data <- download_sharkdata(dataset_names) updated_data <- update_data(data) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_dyntaxa_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","title":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","text":"function updates Dyntaxa taxonomy records based list Dyntaxa taxon IDs. collects parent IDs SLU Artdatabanken API (Dyntaxa), retrieves full taxonomy records, organizes data full taxonomic table can joined data downloaded SHARKdata","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_dyntaxa_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","text":"","code":"update_dyntaxa_taxonomy(dyntaxa_ids, subscription_key)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_dyntaxa_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","text":"dyntaxa_ids vector Dyntaxa taxon IDs update. subscription_key character string containing subscription key accessing SLU Artdatabanken API Dyntaxa. key provided registered users SLU Artdatabanken.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_dyntaxa_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","text":"data frame representing updated Dyntaxa taxonomy table.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_dyntaxa_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","text":"Please read conditions register using API. Data collected API stored SLU Artdatabanken. Genom att anvanda denna applikation atar jag mig att folja regler anvandning av SLU Artdatabankens information, inklusive att respektera tredje mans upphovsratt. Detta atagande gors aven direkt mot SLU. Vid brott mot detta kan jag forlora ratten att anvanda applikationen","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_dyntaxa_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update taxonomy from SHARKdata datasets via SLU Artdatabanken API (Dyntaxa) — update_dyntaxa_taxonomy","text":"","code":"if (FALSE) { # \\dontrun{ # Update Dyntaxa taxonomy for taxon IDs 238366 and 1010380 updated_taxonomy <- update_dyntaxa_taxonomy(c(238366, 1010380), \"your_subscription_key\") print(updated_taxonomy) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_worms_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Update taxonomy from SHARKdata datasets via WoRMS API — update_worms_taxonomy","title":"Update taxonomy from SHARKdata datasets via WoRMS API — update_worms_taxonomy","text":"function collects WoRMS (World Register Marine Species) taxonomy information given set Aphia IDs. data organized full taxonomic table can joined data downloaded SHARKdata","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_worms_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update taxonomy from SHARKdata datasets via WoRMS API — update_worms_taxonomy","text":"","code":"update_worms_taxonomy(aphiaid)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_worms_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update taxonomy from SHARKdata datasets via WoRMS API — update_worms_taxonomy","text":"aphiaid numeric vector containing Aphia IDs WoRMS taxonomy needs updated.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_worms_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update taxonomy from SHARKdata datasets via WoRMS API — update_worms_taxonomy","text":"data frame containing updated WoRMS taxonomy information.","code":""},{"path":[]},{"path":"https://sharksmhi.github.io/SHARK4R/reference/update_worms_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update taxonomy from SHARKdata datasets via WoRMS API — update_worms_taxonomy","text":"","code":"if (FALSE) { # \\dontrun{ # Update WoRMS taxonomy for a set of Aphia IDs updated_taxonomy <- update_worms_taxonomy(c(149619, 149122, 11)) print(updated_taxonomy) } # }"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/validate_dataset_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to validate dataset names — validate_dataset_names","title":"Helper function to validate dataset names — validate_dataset_names","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/validate_dataset_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to validate dataset names — validate_dataset_names","text":"","code":"validate_dataset_names(filtered_datasets, dataset_names)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/validate_dataset_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to validate dataset names — validate_dataset_names","text":"filtered_datasets data frame filtered datasets. dataset_names vector dataset names validate.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/validate_dataset_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to validate dataset names — validate_dataset_names","text":"NULL. stops execution error message validation fails.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/validate_dataset_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper function to validate dataset names — validate_dataset_names","text":"internal function validates whether specified dataset names database.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/year_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter datasets based on year — year_filter","title":"Filter datasets based on year — year_filter","text":"function deprecated SHARKdata now replaced SHARK API. Use get_shark_table() instead. internal function filters datasets based specified year.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/year_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter datasets based on year — year_filter","text":"","code":"year_filter(datasets, year)"},{"path":"https://sharksmhi.github.io/SHARK4R/reference/year_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter datasets based on year — year_filter","text":"datasets input datasets filter. year year filter datasets.","code":""},{"path":"https://sharksmhi.github.io/SHARK4R/reference/year_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter datasets based on year — year_filter","text":"filtered data frame.","code":""}]
