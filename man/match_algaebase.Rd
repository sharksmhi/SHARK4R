% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algaebase_api_functions.R
\name{match_algaebase}
\alias{match_algaebase}
\title{Search Algaebase for Taxonomic Information}
\usage{
match_algaebase(
  genus,
  species,
  apikey = NULL,
  genus_only = FALSE,
  higher = TRUE,
  unparsed = FALSE,
  exact_matches_only = TRUE,
  sleep_time = 1,
  newest_only = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{genus}{A character vector of genus names.}

\item{species}{A character vector of species names corresponding to the \code{genus} vector. Must be the same length as \code{genus}.}

\item{apikey}{A character string containing the API key for accessing the Algaebase API.}

\item{genus_only}{Logical. If \code{TRUE}, searches are based solely on the genus name, ignoring species. Defaults to \code{FALSE}.}

\item{higher}{Logical. If \code{TRUE}, includes higher taxonomy (e.g., kingdom, phylum) in the output. Defaults to \code{TRUE}.}

\item{unparsed}{Logical. If \code{TRUE}, returns raw JSON output instead of an R data frame. Defaults to \code{FALSE}.}

\item{exact_matches_only}{Logical. If \code{TRUE}, restricts results to exact matches. Defaults to \code{TRUE}.}

\item{sleep_time}{Numeric. The delay (in seconds) between consecutive Algaebase API queries. Defaults to \code{1}. A delay is recommended to avoid overwhelming the API for large queries.}

\item{newest_only}{A logical value indicating whether to return only the most recent entries (default is \code{TRUE}).}

\item{verbose}{Logical. If \code{TRUE}, displays a progress bar to indicate query status. Defaults to \code{TRUE}.}
}
\value{
A data frame containing taxonomic information for each input genus-species combination. Columns may include:
\itemize{
\item \code{id}: Algaebase ID (if available)
\item \code{kingdom}, \code{phylum}, \code{class}, \code{order}, \code{family}: Higher taxonomy (if \code{higher = TRUE})
\item \code{genus}, \code{species}, \code{infrasp}: Genus, species, and infraspecies names (if applicable)
\item \code{taxonomic_status}: Status of the name (e.g., "accepted", "synonym", "unverified")
\item \code{currently_accepted}: Logical indicator for whether the name is currently accepted
\item \code{accepted_name}: Currently accepted name if different from the input name
\item \code{input_name}: Name supplied by the user
\item \code{input_match}: \code{1} for exact matches, otherwise \code{0}
\item \code{taxon_rank}: Taxonomic rank of the accepted name (e.g., "genus", "species")
\item \code{mod_date}: Date when the entry was last modified in Algaebase
\item \code{long_name}: Full species name with authorship and date
\item \code{authorship}: Authors associated with the species name
}
}
\description{
This function queries the Algaebase API to retrieve taxonomic information for a list of algae names based on genus and (optionally) species.
It supports exact matching, genus-only searches, and retrieval of higher taxonomic ranks.
}
\details{
Scientific names can be parsed using the \code{parse_scientific_names()} function before being processed by \code{match_algaebase()}.

Duplicate genus-species combinations are handled efficiently by querying each unique combination only once. Genus-only searches are performed when \code{genus_only = TRUE}
or when the species name is missing or invalid. Errors during API queries are gracefully handled by returning rows with \code{NA} values for missing or unavailable data.

The function allows for integration with data analysis workflows that require resolving or verifying taxonomic names against Algaebase.
}
\examples{
\dontrun{
# Example with genus and species vectors
genus_vec <- c("Thalassiosira", "Skeletonema", "Tripos")
species_vec <- c("pseudonana", "costatum", "furca")

algaebase_results <- match_algaebase(
  genus = genus_vec,
  species = species_vec,
  apikey = "your_api_key",
  exact_matches_only = TRUE,
  verbose = TRUE
)
head(algaebase_results)
}
}
\seealso{
\url{https://algaebase.org/} for AlgaeBase website.

\code{\link{parse_scientific_names}}
}
